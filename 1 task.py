# Алгоритм решения задачи:
#
# Создаем словарь, в котором будем хранить информацию о том, в каком ряду находится каждая клавиша.
#
# Считываем идентификаторы символов на клавишах и их номера рядов на клавиатуре. Добавляем информацию в словарь.
#
# Считываем текст реферата и для каждой пары соседних символов находим разнорядность, если символы находятся
# в разных рядах.
#
# Суммируем все найденные разнорядности и выводим результат.

n = int(input())
ids = list(map(int, input().split()))
rows = list(map(int, input().split()))
k = int(input())
text = list(map(int, input().split()))

# Создаем словарь, где ключи — идентификаторы символов, а значения — их номер ряда на клавиатуре
keyboard = {ids[i]: rows[i] for i in range(n)}

count = 0
prev_row = keyboard[text[0]]  # Номер ряда первого символа в тексте
for i in range(1, k):
    curr_row = keyboard[text[i]]  # Номер ряда текущего символа
    if curr_row != prev_row:  # Если текущий символ на другом ряде
        count += 1  # Увеличиваем счетчик разнорядных переходов
    prev_row = curr_row  # Обновляем номер ряда предыдущего символа

print(count)
